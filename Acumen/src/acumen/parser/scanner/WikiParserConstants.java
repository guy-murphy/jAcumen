/* Generated By:JavaCC: Do not edit this line. WikiParserConstants.java */
package acumen.parser.scanner;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface WikiParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int URL = 1;
  /** RegularExpression Id. */
  int TOPIC_LINK = 2;
  /** RegularExpression Id. */
  int LINK = 3;
  /** RegularExpression Id. */
  int HEADING = 4;
  /** RegularExpression Id. */
  int OPEN_HEADING = 5;
  /** RegularExpression Id. */
  int CLOSE_HEADING = 6;
  /** RegularExpression Id. */
  int BLOCK_BOX = 7;
  /** RegularExpression Id. */
  int BLOCK_QUOTE = 8;
  /** RegularExpression Id. */
  int BLOCK_FORM = 9;
  /** RegularExpression Id. */
  int OPEN_BLOCK_BOX = 10;
  /** RegularExpression Id. */
  int OPEN_BLOCK_QUOTE = 11;
  /** RegularExpression Id. */
  int OPEN_BLOCK_FORM = 12;
  /** RegularExpression Id. */
  int CLOSE_BLOCK_BOX = 13;
  /** RegularExpression Id. */
  int CLOSE_BLOCK_QUOTE = 14;
  /** RegularExpression Id. */
  int CLOSE_BLOCK_FORM = 15;
  /** RegularExpression Id. */
  int BLOCK_CODE = 16;
  /** RegularExpression Id. */
  int OPEN_BLOCK_CODE = 17;
  /** RegularExpression Id. */
  int CLOSE_BLOCK_CODE = 18;
  /** RegularExpression Id. */
  int CODE_TEXT = 19;
  /** RegularExpression Id. */
  int BLOCK_TITLE = 20;
  /** RegularExpression Id. */
  int BLOCK_TABLE = 21;
  /** RegularExpression Id. */
  int OPEN_BLOCK_TABLE = 22;
  /** RegularExpression Id. */
  int CLOSE_BLOCK_TABLE = 23;
  /** RegularExpression Id. */
  int UNKNOWN = 24;
  /** RegularExpression Id. */
  int NONASCII = 25;
  /** RegularExpression Id. */
  int OPEN_ANCHOR = 26;
  /** RegularExpression Id. */
  int CLOSE_ANCHOR = 27;
  /** RegularExpression Id. */
  int CONTROLS_AND_BASIC_LATIN = 28;
  /** RegularExpression Id. */
  int CONTROLS_AND_LATIN1_SUPPLEMENT = 29;
  /** RegularExpression Id. */
  int LATIN_EXTENDED_A = 30;
  /** RegularExpression Id. */
  int LATIN_EXTENDED_B = 31;
  /** RegularExpression Id. */
  int LATIN_EXTENDED_ADDITIONAL = 32;
  /** RegularExpression Id. */
  int GENERAL_PUNCTUATION = 33;
  /** RegularExpression Id. */
  int SUPER_AND_SUB_SCRIPT = 34;
  /** RegularExpression Id. */
  int CURRENCY_SYMBOL = 35;
  /** RegularExpression Id. */
  int CYRILLIC = 36;
  /** RegularExpression Id. */
  int CYRILLIC_SUPPLEMENT = 37;
  /** RegularExpression Id. */
  int UNICODE_RANGES = 38;
  /** RegularExpression Id. */
  int WIKI_NAME = 39;
  /** RegularExpression Id. */
  int NUMBER = 40;
  /** RegularExpression Id. */
  int ALPHA_NUMERIC = 41;
  /** RegularExpression Id. */
  int DIGIT = 42;
  /** RegularExpression Id. */
  int UPPER = 43;
  /** RegularExpression Id. */
  int LOWER = 44;
  /** RegularExpression Id. */
  int ALPHA = 45;
  /** RegularExpression Id. */
  int SOLID_TEXT = 46;
  /** RegularExpression Id. */
  int TEXT = 47;
  /** RegularExpression Id. */
  int SAFE_TEXT = 48;
  /** RegularExpression Id. */
  int SPACE = 49;
  /** RegularExpression Id. */
  int TAB = 50;
  /** RegularExpression Id. */
  int WS = 51;
  /** RegularExpression Id. */
  int NL = 52;
  /** RegularExpression Id. */
  int NON_MARKUP_SYMBOL = 53;
  /** RegularExpression Id. */
  int MARKUP_SYMBOL = 54;
  /** RegularExpression Id. */
  int ESCAPED_SYMBOL = 55;
  /** RegularExpression Id. */
  int SPECIAL_SYMBOL = 56;
  /** RegularExpression Id. */
  int SYMBOL = 57;
  /** RegularExpression Id. */
  int SAFE_SYMBOL = 58;
  /** RegularExpression Id. */
  int FURTHER = 59;
  /** RegularExpression Id. */
  int HYPHEN = 60;
  /** RegularExpression Id. */
  int EO = 61;
  /** RegularExpression Id. */
  int FOREIGN = 62;
  /** RegularExpression Id. */
  int PLUS = 63;
  /** RegularExpression Id. */
  int MINUS = 64;
  /** RegularExpression Id. */
  int MULTIPLY = 65;
  /** RegularExpression Id. */
  int EQUALS = 66;
  /** RegularExpression Id. */
  int TILDE = 67;
  /** RegularExpression Id. */
  int HASH = 68;
  /** RegularExpression Id. */
  int HAT = 69;
  /** RegularExpression Id. */
  int ACUTE = 70;
  /** RegularExpression Id. */
  int BAR = 71;
  /** RegularExpression Id. */
  int OPEN_INDEX = 72;
  /** RegularExpression Id. */
  int CLOSE_INDEX = 73;
  /** RegularExpression Id. */
  int LT = 74;
  /** RegularExpression Id. */
  int GT = 75;
  /** RegularExpression Id. */
  int DIVIDE = 76;
  /** RegularExpression Id. */
  int PERCENT = 77;
  /** RegularExpression Id. */
  int APOS = 78;
  /** RegularExpression Id. */
  int QUOTE = 79;
  /** RegularExpression Id. */
  int POUND = 80;
  /** RegularExpression Id. */
  int DOLAR = 81;
  /** RegularExpression Id. */
  int AMP = 82;
  /** RegularExpression Id. */
  int OPEN_PAREN = 83;
  /** RegularExpression Id. */
  int CLOSE_PAREN = 84;
  /** RegularExpression Id. */
  int OPEN_BRACE = 85;
  /** RegularExpression Id. */
  int CLOSE_BRACE = 86;
  /** RegularExpression Id. */
  int COLON = 87;
  /** RegularExpression Id. */
  int SEMICOLON = 88;
  /** RegularExpression Id. */
  int AT = 89;
  /** RegularExpression Id. */
  int COMMA = 90;
  /** RegularExpression Id. */
  int POINT = 91;
  /** RegularExpression Id. */
  int QUESTION = 92;
  /** RegularExpression Id. */
  int EXCLAIM = 93;
  /** RegularExpression Id. */
  int BACKSLASH = 94;
  /** RegularExpression Id. */
  int UNDERSCORE = 95;
  /** RegularExpression Id. */
  int ESC_PLUS = 96;
  /** RegularExpression Id. */
  int ESC_MINUS = 97;
  /** RegularExpression Id. */
  int ESC_MULTIPLY = 98;
  /** RegularExpression Id. */
  int ESC_EQUALS = 99;
  /** RegularExpression Id. */
  int ESC_TILDE = 100;
  /** RegularExpression Id. */
  int ESC_HASH = 101;
  /** RegularExpression Id. */
  int ESC_HAT = 102;
  /** RegularExpression Id. */
  int ESC_ACUTE = 103;
  /** RegularExpression Id. */
  int ESC_BAR = 104;
  /** RegularExpression Id. */
  int ESC_OPEN_INDEX = 105;
  /** RegularExpression Id. */
  int ESC_CLOSE_INDEX = 106;
  /** RegularExpression Id. */
  int L_SINGLE_QUOTE = 107;
  /** RegularExpression Id. */
  int R_SINGLE_QUOTE = 108;
  /** RegularExpression Id. */
  int SINGLE_LOW_QUOTE = 109;
  /** RegularExpression Id. */
  int L_DOUBLE_QUOTE = 110;
  /** RegularExpression Id. */
  int R_DOUBLE_QUOTE = 111;
  /** RegularExpression Id. */
  int NDASH = 112;
  /** RegularExpression Id. */
  int MDASH = 113;
  /** RegularExpression Id. */
  int BULLET = 114;
  /** RegularExpression Id. */
  int EURO = 115;

  /** Lexical state. */
  int IN_TABLE = 0;
  /** Lexical state. */
  int IN_CODE = 1;
  /** Lexical state. */
  int IN_BLOCK = 2;
  /** Lexical state. */
  int IN_HEADING = 3;
  /** Lexical state. */
  int DEFAULT = 4;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<URL>",
    "<TOPIC_LINK>",
    "<LINK>",
    "<HEADING>",
    "<OPEN_HEADING>",
    "<CLOSE_HEADING>",
    "<BLOCK_BOX>",
    "<BLOCK_QUOTE>",
    "<BLOCK_FORM>",
    "<OPEN_BLOCK_BOX>",
    "<OPEN_BLOCK_QUOTE>",
    "<OPEN_BLOCK_FORM>",
    "<CLOSE_BLOCK_BOX>",
    "<CLOSE_BLOCK_QUOTE>",
    "<CLOSE_BLOCK_FORM>",
    "<BLOCK_CODE>",
    "<OPEN_BLOCK_CODE>",
    "<CLOSE_BLOCK_CODE>",
    "<CODE_TEXT>",
    "<BLOCK_TITLE>",
    "<BLOCK_TABLE>",
    "<OPEN_BLOCK_TABLE>",
    "<CLOSE_BLOCK_TABLE>",
    "<UNKNOWN>",
    "<NONASCII>",
    "\"<<\"",
    "\">>\"",
    "<CONTROLS_AND_BASIC_LATIN>",
    "<CONTROLS_AND_LATIN1_SUPPLEMENT>",
    "<LATIN_EXTENDED_A>",
    "<LATIN_EXTENDED_B>",
    "<LATIN_EXTENDED_ADDITIONAL>",
    "<GENERAL_PUNCTUATION>",
    "<SUPER_AND_SUB_SCRIPT>",
    "<CURRENCY_SYMBOL>",
    "<CYRILLIC>",
    "<CYRILLIC_SUPPLEMENT>",
    "<UNICODE_RANGES>",
    "<WIKI_NAME>",
    "<NUMBER>",
    "<ALPHA_NUMERIC>",
    "<DIGIT>",
    "<UPPER>",
    "<LOWER>",
    "<ALPHA>",
    "<SOLID_TEXT>",
    "<TEXT>",
    "<SAFE_TEXT>",
    "\" \"",
    "\"\\t\"",
    "<WS>",
    "<NL>",
    "<NON_MARKUP_SYMBOL>",
    "<MARKUP_SYMBOL>",
    "<ESCAPED_SYMBOL>",
    "<SPECIAL_SYMBOL>",
    "<SYMBOL>",
    "<SAFE_SYMBOL>",
    "\":-\"",
    "\" - \"",
    "\"\\u0153\"",
    "<FOREIGN>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"=\"",
    "\"~\"",
    "\"#\"",
    "\"^\"",
    "\"`\"",
    "\"|\"",
    "\"[\"",
    "\"]\"",
    "\"<\"",
    "\">\"",
    "\"/\"",
    "\"%\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"\\u00a3\"",
    "\"$\"",
    "\"&\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\";\"",
    "\"@\"",
    "\",\"",
    "\".\"",
    "\"?\"",
    "\"!\"",
    "\"\\\\\"",
    "\"_\"",
    "\"\\\\+\"",
    "\"\\\\-\"",
    "\"\\\\*\"",
    "\"\\\\=\"",
    "\"\\\\~\"",
    "\"\\\\#\"",
    "\"\\\\^\"",
    "\"\\\\`\"",
    "\"\\\\|\"",
    "\"\\\\[\"",
    "\"\\\\]\"",
    "\"\\u2018\"",
    "\"\\u2019\"",
    "\"\\u201a\"",
    "\"\\u201c\"",
    "\"\\u201d\"",
    "\"\\u2013\"",
    "\"\\u2014\"",
    "\"\\u2022\"",
    "\"\\u20ac\"",
  };

}
